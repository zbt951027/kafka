<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:property-placeholder location="classpath:conf/kafka.properties" /> <!-- 读取资源配置文件 --> <!-- 定义一个消息监听容器类，这个容器类将融合其余的两项配置内容 -->
	
	<bean id="messageListenerContainer"
		class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
		<constructor-arg index="0" ref="consumerFactory" />
		<constructor-arg index="1" ref="containerProperties" />
	</bean>
	
	<!-- 定义消费者的容器类 -->
	<bean id="containerProperties"
		class="org.springframework.kafka.listener.config.ContainerProperties">
		<constructor-arg value="${kafka.topic}" /> <!-- 定义消费的消息主题 -->
		<property name="messageListener"> <!-- 定义消息监听处理类 -->
			<bean class="cn.mldn.springkafka.consumer.KafkaMessageConsumer" />
		</property>
	</bean>
	
	<!-- 定义消息消费者的连接工厂类 -->
	<bean id="consumerFactory"
		class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<map> <!-- 将Kafka所有核心的配置项都设置到了消费的连接工厂类之中 -->
				<entry key="bootstrap.servers" value="${kafka.bootstrap.servers}" />
				<entry key="key.deserializer" value="${kafka.key.deserializer}" />
				<entry key="value.deserializer" value="${kafka.value.deserializer}" />
				<entry key="group.id" value="${kafka.group.id}" />
			</map>
		</constructor-arg>
	</bean>
</beans> 