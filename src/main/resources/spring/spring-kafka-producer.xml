<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="cn.mldn.springkafka.producer" />
	<context:property-placeholder location="classpath:conf/kafka.properties" /> <!-- 读取资源配置文件 -->
	<!-- SpringKakfa提供有一个消息的处理模版支持类，直接使用此类即可 -->
	<bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg ref="producerFactory" /> <!-- 设置连接的消息组件服务工厂 -->
		<property name="defaultTopic" value="${kafka.topic}" />
	</bean> <!-- 定义消息生产者的连接工厂类 -->
	<bean id="producerFactory"
		class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
		<constructor-arg>
			<map> <!-- 将Kafka所有核心的配置项都设置到了消费的连接工厂类之中 -->
				<entry key="bootstrap.servers" value="${kafka.bootstrap.servers}" /> 
				<entry key="key.serializer" value="${kafka.key.serializer}" />
				<entry key="value.serializer" value="${kafka.value.serializer}" />
			</map>
		</constructor-arg>
	</bean>
</beans> 